<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'>
<sqlMap namespace="gnrl">

	<typeAlias alias="hashMap" type="java.util.HashMap"/>
	<typeAlias alias="int" type="java.lang.Integer"/>

	<sql id="whereBbsList">
		AND CATEGORY = #category# AND PARENT_BBS_SN IS NULL
		<isEmpty property="author_cl">
			AND (DELETE_AT = 'N' OR ( DELETE_AT = 'A' AND WRITNG_ID = #esntl_id#))		
		</isEmpty>
		<isNotEmpty property="author_cl">
			AND DELETE_AT IN ('N', 'A')		
		</isNotEmpty>
	 	<isNotEmpty property="keyword">
			AND (UPPER(SUBJECT) LIKE '%' || UPPER(#keyword#) || '%' OR UPPER(CONTENTS) LIKE '%' || UPPER(#keyword#) || '%' )
	 	</isNotEmpty>
	</sql>
	
	<insert id="gnrl.bbs.insertBbs" parameterClass="hashMap">
		INSERT INTO TB_BBS (BBS_SN, CATEGORY, SUBJECT, CONTENTS, WRITNG_ID, WRITNG_DT, VIEWCNT, DELETE_AT, SECRET_AT
			, SUBCATEGORY, PARENT_BBS_SN)
		SELECT NVL(MAX(BBS_SN), 0) + 1, #category#, #subject#, #contents#, #esntl_id#, SYSDATE, 0, 'N', #secret_at#
			, #subcategory#, #parent_bbs_sn#
		FROM TB_BBS
	</insert>	

	<update id="gnrl.bbs.updateBbsViewCnt" parameterClass="hashMap">
		UPDATE TB_BBS SET VIEWCNT = VIEWCNT + 1
		WHERE BBS_SN = #bbs_sn#
	</update>	

	<update id="gnrl.bbs.deleteBbs" parameterClass="hashMap">
		UPDATE TB_BBS SET DELETE_AT = #delete_at#
		WHERE BBS_SN = #bbs_sn#
	</update>	

	<update id="gnrl.bbs.updateBbs" parameterClass="hashMap">
		UPDATE TB_BBS SET SUBJECT = #subject#, CONTENTS = #contents#, UPDT_ID = #esntl_id#, UPDT_DT = SYSDATE, SECRET_AT = #secret_at#
			, SUBCATEGORY = #subcategory#
		WHERE BBS_SN = #bbs_sn#
	</update>	
	
	<select id="gnrl.bbs.viewBbs"  parameterClass="hashMap" resultClass="hashMap">
		SELECT B.BBS_SN, B.CATEGORY, B.SUBJECT, <![CDATA[REPLACE(REPLACE(REPLACE(B.CONTENTS,CHR(10),'<BR>'),CHR(13),' '), '  ', CHR(38)||'nbsp;'||CHR(38)||'nbsp;')]]> CONTENTS
		    , B.WRITNG_ID, B.VIEWCNT
			, U.USER_NM AS USER_NM, SECRET_AT, U.EMAIL AS EMAIL, TO_CHAR(B.WRITNG_DT, 'YYYY-MM-DD') AS WRITNG_DT 
			, B.SUBCATEGORY, CASE B.SUBCATEGORY WHEN 'R' THEN '예약문의' WHEN 'G' THEN '상품문의' WHEN 'F' THEN '환불문의' ELSE '' END AS SUBCATEGORYNM
		FROM TB_BBS B
			INNER JOIN TB_USER U ON B.WRITNG_ID = U.ESNTL_ID
		WHERE B.BBS_SN = #bbs_sn#
	</select>
	
	
	<select id="gnrl.bbs.selectBbsListCount"  parameterClass="hashMap" resultClass="Integer">
				SELECT COUNT(1)
				FROM TB_BBS
				WHERE 1 = 1
					<include refid="whereBbsList"/>
	</select>
	
	<select id="gnrl.bbs.selectBbsList"  parameterClass="hashMap" resultClass="hashMap">
		SELECT B.BBS_SN, B.SUBJECT, B.VIEWCNT, TO_CHAR(B.WRITNG_DT, 'YYYY-MM-DD HH24:MI') AS WRITNG_DT, U.USER_NM AS USER_NM, SECRET_AT, B.WRITNG_ID
			, B.SUBCATEGORY, CASE B.SUBCATEGORY WHEN 'R' THEN '예약문의' WHEN 'G' THEN '상품문의' WHEN 'F' THEN '환불문의' ELSE '' END AS SUBCATEGORYNM
			, 1 AS LVL, B.DELETE_AT
		FROM (
			SELECT BBS_SN, ROWNUM AS RNUM
			FROM (
				SELECT BBS_SN
				FROM TB_BBS
				WHERE 1 = 1
					<include refid="whereBbsList"/>
				ORDER BY BBS_SN DESC
			) A
		) AA
		INNER JOIN TB_BBS B ON AA.BBS_SN = B.BBS_SN
		INNER JOIN TB_USER U ON B.WRITNG_ID = U.ESNTL_ID
		WHERE AA.RNUM BETWEEN #startIdx# AND #endIdx#
		ORDER BY AA.RNUM	
	</select>

	<select id="gnrl.bbs.selectChildBbsList"  parameterClass="hashMap" resultClass="hashMap">
		SELECT B.BBS_SN, B.SUBJECT, B.VIEWCNT, TO_CHAR(B.WRITNG_DT, 'YYYY-MM-DD HH24:MI') AS WRITNG_DT, U.USER_NM AS USER_NM, SECRET_AT, B.WRITNG_ID
			, AA.LVL
		FROM (
			SELECT B.BBS_SN, LEVEL AS LVL
			FROM TB_BBS B
			WHERE B.BBS_SN <![CDATA[<>]]> #bbs_sn#
			START WITH B.BBS_SN = #bbs_sn#
			CONNECT BY PRIOR B.BBS_SN = B.PARENT_BBS_SN
		) AA
		INNER JOIN TB_BBS B ON AA.BBS_SN = B.BBS_SN
		INNER JOIN TB_USER U ON B.WRITNG_ID = U.ESNTL_ID		
	</select>

	<insert id="gnrl.bbs.insertComment" parameterClass="hashMap">
		INSERT INTO TB_BBS_COMMENT (COMMENT_SN, BBS_SN, CMT, WRITNG_ID, WRITNG_DT, DELETE_AT)
		SELECT NVL(MAX(COMMENT_SN), 0) + 1, #bbs_sn#, #cmt#, #esntl_id#, SYSDATE, 'N'
		FROM TB_BBS_COMMENT
	</insert>	

	<update id="gnrl.bbs.deleteComment" parameterClass="hashMap">
		UPDATE TB_BBS_COMMENT SET DELETE_AT = 'Y'
		WHERE COMMENT_SN = #comment_sn#
	</update>	

	<update id="gnrl.bbs.updateComment" parameterClass="hashMap">
		UPDATE TB_BBS_COMMENT SET CMT = #cmt#, UPDT_ID = #esntl_id#, UPDT_DT = SYSDATE
		WHERE COMMENT_SN = #comment_sn#
	</update>	

	<select id="gnrl.bbs.selectCommentList"  parameterClass="hashMap" resultClass="hashMap">
		SELECT C.COMMENT_SN, C.CMT, C.WRITNG_ID, TO_CHAR(C.WRITNG_DT, 'YYYY-MM-DD HH24:MI') AS WRITNG_DT, U.USER_NM AS USER_NM
		FROM TB_BBS_COMMENT C
			INNER JOIN TB_USER U ON C.WRITNG_ID = U.ESNTL_ID
		WHERE C.BBS_SN = #bbs_sn# AND C.DELETE_AT = 'N'
		ORDER BY C.COMMENT_SN	
	</select>
	
</sqlMap>
