<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'> 
<sqlMap namespace="gnrl">

	<typeAlias alias="hashMap" type="java.util.HashMap"/>
	
	<resultMap id="rmCartList" class="hashMap">
		<result property="TOT_CNT"       column="TOT_CNT"       jdbcType="string" javaType="string"/>    
		<result property="ESNTL_ID"      column="ESNTL_ID"    	jdbcType="string" javaType="string"/>
		<result property="CART_SN"       column="CART_SN"     	jdbcType="string" javaType="string"/>
		<result property="GOODS_CODE"    column="GOODS_CODE"  	jdbcType="string" javaType="string"/>
		<result property="PURCHS_AMOUNT" column="PURCHS_AMOUNT"	jdbcType="string" javaType="string"/>
		<result property="TOUR_DE"       column="TOUR_DE"     	jdbcType="string" javaType="string"/>
		<result property="BEGIN_TIME"    column="BEGIN_TIME"  	jdbcType="string" javaType="string"/>
		<result property="END_TIME"      column="END_TIME"    	jdbcType="string" javaType="string"/>
		<result property="GOODS_NM"      column="GOODS_NM"    	jdbcType="string" javaType="string"/>
		<result property="CL_SE"         column="CL_SE"       	jdbcType="string" javaType="string"/>
		<result property="FILE_CODE"     column="FILE_CODE"   	jdbcType="string" javaType="string"/>
		<result property="WAIT_TIME"     column="WAIT_TIME"   	jdbcType="string" javaType="string"/>
		<result property="MVMN_TIME"     column="MVMN_TIME"   	jdbcType="string" javaType="string"/>
		<result property="WRITNG_ID"     column="WRITNG_ID"   	jdbcType="string" javaType="string"/>
		<result property="WRITNG_DE"     column="WRITNG_DE"   	jdbcType="string" javaType="string"/>
		<result property="CHKIN_DE"      column="CHKIN_DE"    	jdbcType="string" javaType="string"/>
		<result property="CHCKT_DE"      column="CHCKT_DE"    	jdbcType="string" javaType="string"/>
		<result property="DIFF_DAYS"     column="DIFF_DAYS"   	jdbcType="string" javaType="string"/>
		<result property="SORT_DE"       column="SORT_DE"     	jdbcType="string" javaType="string"/>
		<result property="CTY_NM"        column="CTY_NM"      	jdbcType="string" javaType="string"/>
		<result property="UPPER_CL_NM"   column="UPPER_CL_NM" 	jdbcType="string" javaType="string"/>
		<result property="CL_NM"         column="CL_NM"        	jdbcType="string" javaType="string"/>
		<result property="ORIGIN_AMOUNT"         column="ORIGIN_AMOUNT"        	jdbcType="string" javaType="string"/>
		<result property="PURCHS_AT"         column="PURCHS_AT"        	jdbcType="string" javaType="string"/>
		<result property="PICKUP_INCLS_AT"         column="PICKUP_INCLS_AT"        	jdbcType="string" javaType="string"/>		
		<result property="GOODS_OPTION"         column="GOODS_OPTION"        	jdbcType="string" javaType="string"/>		
		<result property="GOODS_DATE"         column="GOODS_DATE"        	jdbcType="string" javaType="string"/>		
		<result property="GOODS_TIME"         column="GOODS_TIME"        	jdbcType="string" javaType="string"/>		
		<result property="SETUP_SE_V"         column="SETUP_SE_V"        	jdbcType="string" javaType="string"/>
		<!-- <result property="OPTIONS"       column="{ESNTL_ID=ESNTL_ID, CART_SN=CART_SN}" select="gnrl.order.selectCartDetailList" javaType="java.util.ArrayList"/> -->
	</resultMap>	

	<resultMap id="rm" class="hashMap">
		<result property="SETUP_SE"      column="SETUP_SE"      jdbcType="string" javaType="string"/>
		<result property="SETUP_NM"      column="SETUP_NM"      jdbcType="string" javaType="string"/>
		<result property="NMPR_CND"      column="NMPR_CND"      jdbcType="string" javaType="string"/>
		<result property="NMPR_CO"       column="NMPR_CO"       jdbcType="string" javaType="string"/>
	</resultMap>	

	<select id="gnrl.order.selectCartDetail" parameterClass="hashMap" resultMap="rmCartList">
	<![CDATA[
		SELECT COUNT(*) OVER() AS TOT_CNT
		     , A.ESNTL_ID
		     , A.CART_SN
		     , A.GOODS_CODE
		     , A.PURCHS_AMOUNT
		     , A.TOUR_DE
		     , A.BEGIN_TIME
		     , A.END_TIME
		     , X.GOODS_NM
		     , X.CL_SE
		     , X.FILE_CODE
		     , X.WAIT_TIME
		     , X.MVMN_TIME
		     , A.WRITNG_ID
		     , TO_CHAR(A.WRITNG_DT,'YYYY-MM-DD') WRITNG_DE
		     , A.CHKIN_DE
		     , A.CHCKT_DE
		     , DECODE(A.TOUR_DE, NULL, TO_DATE(A.CHCKT_DE, 'YYYYMMDD') - TO_DATE(A.CHKIN_DE, 'YYYYMMDD'), '', TO_DATE(A.CHCKT_DE, 'YYYYMMDD') - TO_DATE(A.CHKIN_DE, 'YYYYMMDD'), 0 ) DIFF_DAYS
		     , DECODE(X.CL_SE, 'S', A.CHKIN_DE, 'T', A.CHKIN_DE, A.TOUR_DE) SORT_DE
		     , (SELECT CTY_NM FROM TB_CTY Y WHERE Y.CTY_CODE = X.CTY_CODE) CTY_NM         
		     , (SELECT CL_NM FROM TB_TOUR_CL Y WHERE Y.UPPER_CL_CODE = '00000' START WITH Y.CL_CODE = X.CL_CODE CONNECT BY PRIOR UPPER_CL_CODE = CL_CODE) UPPER_CL_NM
		     , (SELECT CL_NM FROM TB_TOUR_CL Y WHERE Y.CL_CODE = X.CL_CODE) CL_NM
		     , ORIGIN_AMOUNT 		     
		     , PURCHS_AT
		     , X.PICKUP_INCLS_AT
		     , FN_GET_PURCHS_OPTION(A.CART_SN, 'KO') AS GOODS_OPTION
		     , FN_GET_PURCHS_DATE(A.CART_SN, 'KO') AS GOODS_DATE
		     , FN_GET_PURCHS_TIME(A.CART_SN, 'KO') AS GOODS_TIME
		     , CASE WHEN (SELECT COUNT(1) 
		     	FROM TB_CART_NMPR AAA
		     		INNER JOIN TB_GOODS_NMPR BBB ON AAA.GOODS_CODE = BBB.GOODS_CODE AND AAA.NMPR_SN = BBB.NMPR_SN AND AAA.SETUP_SE = BBB.SETUP_SE 
		     	WHERE BBB.SETUP_SE = 'V' AND AAA.CART_SN = A.CART_SN ) > 0 THEN 'Y' ELSE 'N' END SETUP_SE_V
		  FROM TB_CART_GOODS A
		 INNER JOIN TB_GOODS X
		    ON X.GOODS_CODE = A.GOODS_CODE
		   AND X.DELETE_AT = 'N'
		 WHERE A.ESNTL_ID = #esntl_id#
		   AND A.EXPRTN_AT = 'N'
		   AND A.DELETE_AT = 'N'
		   AND A.CART_SN = #cart_sn#
		 ORDER BY DECODE(X.CL_SE, 'S', A.CHKIN_DE, 'T', A.CHKIN_DE, A.TOUR_DE), A.BEGIN_TIME
	]]>
	</select>

	<select id="gnrl.order.selectCartDetailList" parameterClass="hashMap" resultMap="rmCartDetail">
		SELECT A.CART_SN
		     , B.SETUP_SE 
		     , DECODE(B.SETUP_SE, 'R', '객실', 'E', '식사', 'C', '체크인/아웃', 'P', '인원') SETUP_NM 
		     , B.NMPR_CND
		     , B.SETUP_AMOUNT
		     , B.SETUP_RATE
		     , A.NMPR_CO
		     , (SELECT X.CODE_NM FROM TB_CMMN_DETAIL_CODE X WHERE X.CODE_ID = 'COM008' AND X.CODE = B.CO_UNIT_SE) UNIT_NM
		  FROM TB_CART_NMPR A
		     , TB_GOODS_NMPR B
		 WHERE A.CART_SN = #CART_SN#
		   AND A.GOODS_CODE = B.GOODS_CODE
		   AND A.NMPR_SN = B.NMPR_SN
		   AND A.SETUP_SE = B.SETUP_SE
		 ORDER BY A.CART_SN, B.SETUP_SE DESC, B.SORT_ORDR, B.NMPR_SN
	</select>

	<parameterMap class="java.util.HashMap" id="paramChkSchedule">
		<parameter property="cart_sn" javaType="java.lang.String" mode="IN" jdbcType="VARCHAR"/>
		<parameter property="can_yn" javaType="java.lang.String" mode="OUT" jdbcType="VARCHAR"/>
	</parameterMap>
	
	<procedure id="gnrl.order.chkSchedule_old" parameterMap="paramChkSchedule">
		{ CALL SP_CheckSchedule ( ?, ?) }
	</procedure>	

	<select id="gnrl.order.selectPurchsSn" parameterClass="hashMap" resultClass="int">
	<![CDATA[
		SELECT SQ_PURCHS_SN.nextval  FROM DUAL
	]]>
	</select>
	
	<insert id="gnrl.order.insertPurchs"  parameterClass="hashMap">
		INSERT INTO TB_PURCHS (PURCHS_SN, PURCHS_DE, TOT_SETLE_AMOUNT, REAL_SETLE_AMOUNT, USE_POINT
			, CRTFC_NO, SETLE_DT, SETLE_IP, ESNTL_ID, WRITNG_ID, WRITNG_DT, DELETE_AT
			, TOURIST_NM, TOURIST_CTTPC, KAKAO_ID, STATUS) 
		VALUES (#purchs_sn#, TO_CHAR(SYSDATE, 'YYYYMMDD'), #tot_setle_amount#, #real_setle_amount#, #use_point#
			, #crtfc_no#, SYSDATE, #setle_ip#, #esntl_id#, #esntl_id#, SYSDATE ,'N'
			, #tourist_nm#, #tourist_cttpc#, #kakao_id#, #status#)
	</insert>

	<insert id="gnrl.order.insertPurchsGoods"  parameterClass="hashMap">
		INSERT INTO TB_PURCHS_GOODS (PURCHS_SN, CART_SN, PICKUP_PLACE, DROP_PLACE, USE_NMPR, USE_PD) 
		VALUES (#purchs_sn#, #cart_sn#, #pickup_place#, #drop_place#, #use_nmpr#, #use_pd#)
	</insert>

	<update id="gnrl.order.updCartGoods"  parameterClass="hashMap">
		UPDATE TB_CART_GOODS SET PURCHS_AT = 'Y'
		WHERE CART_SN = #cart_sn#
	</update>

	<insert id="gnrl.order.insertReservationDay"  parameterClass="hashMap">
	<![CDATA[
		INSERT INTO TB_GOODS_RSV_DAY (GOODS_CODE, RESERVATIONDT, CART_SN, SETUP_SE)
		SELECT GOODS_CODE, TO_CHAR(start_day + LEVEL -1, 'yyyymmdd') AS RESERVATIONDT, CART_SN
			, CASE WHEN LEVEL = 1 AND CHECKIN = 'Y' THEN 'B' ELSE (CASE WHEN LEVEL = MAX(LEVEL) OVER() AND CHECKOUT = 'Y' THEN 'C' ELSE '' END)  END AS SETUP_SE
		FROM (
			SELECT TO_DATE(CHKIN_DE, 'yyyymmdd') start_day
						, 	TO_DATE(CHCKT_DE, 'yyyymmdd') end_day
						, GOODS_CODE, CART_SN
						, CASE WHEN ( SELECT COUNT(1) FROM TB_CART_NMPR WHERE CART_SN = #cart_sn# AND SETUP_SE = 'C') > 0 THEN 'Y' ELSE 'N' END AS CHECKOUT
						, CASE WHEN ( SELECT COUNT(1) FROM TB_CART_NMPR WHERE CART_SN = #cart_sn# AND SETUP_SE = 'B') > 0 THEN 'Y' ELSE 'N' END AS CHECKIN
			FROM TB_CART_GOODS
			WHERE CART_SN = #cart_sn# AND CHKIN_DE IS NOT NULL AND CHCKT_DE IS NOT NULL
				AND GOODS_CODE IN (SELECT GOODS_CODE FROM TB_GOODS WHERE CL_SE = 'S')
			)
		CONNECT BY start_day + LEVEL - 1 <= end_day - 1 + (CASE WHEN CHECKOUT = 'Y' THEN 1 ELSE 0 END)
	]]>
	</insert>

	<select id="gnrl.order.chkSchedule" parameterClass="hashMap" resultClass="int">
	<![CDATA[
		WITH A AS (
		SELECT CHKIN_DE, GOODS_CODE
			, TO_CHAR(TO_DATE(CHCKT_DE, 'yyyymmdd') - 1 + (CASE WHEN ( SELECT COUNT(1) FROM TB_CART_NMPR WHERE CART_SN = #cart_sn# AND SETUP_SE = 'C') > 0 THEN 1 ELSE 0 END), 'yyyymmdd') AS CHCKT_DE
		FROM TB_CART_GOODS
		WHERE CART_SN = #cart_sn# )
		SELECT COUNT(1)
		FROM TB_GOODS_RSV_DAY D
			INNER JOIN A ON D.GOODS_CODE = A.GOODS_CODE AND D.RESERVATIONDT BETWEEN A.CHKIN_DE AND A.CHCKT_DE
	]]>
	</select>

	<select id="gnrl.order.chkFlight" parameterClass="hashMap" resultClass="int">
		SELECT COUNT(1)
		FROM TB_CART_GOODS CG
			INNER JOIN TB_GOODS G ON CG.GOODS_CODE = G.GOODS_CODE
			LEFT OUTER JOIN TB_FLIGHT F ON CG.FLIGHT_SN = F.FLIGHT_SN
		WHERE CART_SN = #cart_sn# AND G.CL_SE = 'P' AND (G.GOODS_NM LIKE '%픽업%' OR G.GOODS_NM LIKE '%드랍%')
			AND F.FLIGHT_SN IS NULL
	</select>
	
	<update id="gnrl.order.setFlight" parameterClass="hashMap">
		UPDATE TB_CART_GOODS SET FLIGHT_SN = #flight_sn#
		WHERE CART_SN IN (SELECT CART_SN
							FROM TB_CART_GOODS CG
								INNER JOIN TB_GOODS G ON CG.GOODS_CODE = G.GOODS_CODE
							WHERE G.CL_SE = 'P' AND (G.GOODS_NM LIKE '%픽업%' OR G.GOODS_NM LIKE '%드랍%')	
								AND CG.PURCHS_AT = 'N' AND CG.DELETE_AT = 'N' AND G.DELETE_AT = 'N' AND CG.ESNTL_ID = #esntl_id# )	
	</update>
	
	<select id="gnrl.order.getCartPurchsList" parameterClass="hashMap" resultClass="hashMap">
		SELECT PURCHS_SN, CART_SN, PICKUP_PLACE, DROP_PLACE, USE_NMPR, USE_PD 
		FROM TB_PURCHS_GOODS
		WHERE PURCHS_SN = #purchs_sn#
		ORDER BY CART_SN	
	</select>
	
	<select id="gnrl.order.getPurchs" parameterClass="hashMap" resultClass="hashMap">
		SELECT PURCHS_DE, TOT_SETLE_AMOUNT, REAL_SETLE_AMOUNT, USE_POINT, TOURIST_NM, TOURIST_CTTPC, KAKAO_ID, BEGINDT
			, CASE WHEN TO_CHAR(TO_DATE(BEGINDT, 'YYYYMMDD') - 14, 'YYYYMMDD') > TO_CHAR(SYSDATE, 'YYYYMMDD') THEN 'Y' ELSE 'N' END ISCANCEL
			, DELETE_AT, DELETE_RESN_SE, DELETE_RESN_ETC, REFUND_AMOUNT, STATUS
		FROM (
				SELECT P.PURCHS_DE, P.TOT_SETLE_AMOUNT, P.REAL_SETLE_AMOUNT, P.USE_POINT, P.TOURIST_NM, P.TOURIST_CTTPC, P.KAKAO_ID
					, (	SELECT MIN( CASE WHEN TOUR_DE IS NOT NULL THEN TOUR_DE ELSE CHKIN_DE END)
						FROM TB_PURCHS_GOODS PG
							INNER JOIN TB_CART_GOODS CG ON PG.CART_SN = CG.CART_SN		
						WHERE PURCHS_SN = #purchs_sn# ) AS BEGINDT
					, P.DELETE_AT, DC.CODE_NM AS DELETE_RESN_SE, P.DELETE_RESN_ETC, P.REFUND_AMOUNT, P.STATUS
				FROM TB_PURCHS P
					LEFT OUTER JOIN TB_CMMN_DETAIL_CODE DC ON P.DELETE_RESN_SE = DC.CODE AND DC.CODE_ID = 'COM009'
				WHERE PURCHS_SN = #purchs_sn# 
		) A
	</select>

	<select id="gnrl.order.getCancelCode" parameterClass="hashMap" resultClass="hashMap">
		SELECT CODE, CODE_NM FROM TB_CMMN_DETAIL_CODE
		WHERE CODE_ID =  'COM009' AND USE_AT = 'Y'
		ORDER BY SORT_ORDR
	</select>
	
	<select id="gnrl.order.getCancelRefundAmount" parameterClass="hashMap" resultClass="hashMap">
		SELECT CASE WHEN TO_CHAR(TO_DATE(BEGINDT, 'YYYYMMDD') - 30, 'YYYYMMDD') > TO_CHAR(SYSDATE, 'YYYYMMDD') 
						THEN A.REAL_SETLE_AMOUNT 
						ELSE ( CASE WHEN TO_CHAR(TO_DATE(BEGINDT, 'YYYYMMDD') - 15, 'YYYYMMDD') > TO_CHAR(SYSDATE, 'YYYYMMDD') 
										THEN A.REAL_SETLE_AMOUNT  * 0.5
										ELSE 0 END )
						END AS REFUND_AMOUNT
		FROM (
				SELECT PURCHS_DE, TOT_SETLE_AMOUNT, REAL_SETLE_AMOUNT, USE_POINT
					, (	SELECT MIN( CASE WHEN TOUR_DE IS NOT NULL THEN TOUR_DE ELSE CHKIN_DE END)
						FROM TB_PURCHS_GOODS PG
							INNER JOIN TB_CART_GOODS CG ON PG.CART_SN = CG.CART_SN		
						WHERE PURCHS_SN = P.PURCHS_SN ) AS BEGINDT
				FROM TB_PURCHS P
				WHERE PURCHS_SN = #purchs_sn#
		) A	
	</select>

	<update id="gnrl.order.cancelPurchs" parameterClass="hashMap" >
		UPDATE TB_PURCHS SET DELETE_AT = 'Y', DELETE_ID = #esntl_id#, DELETE_DT = SYSDATE
			, DELETE_RESN_SE = #delete_resn_se#, DELETE_RESN_ETC = #delete_resn_etc#, REFUND_AMOUNT = #refund_amount# 
		WHERE PURCHS_SN = #purchs_sn#
	</update>
	
	<delete id="gnrl.order.cancelReservationDay" parameterClass="hashMap" >
		DELETE FROM TB_GOODS_RSV_DAY WHERE (GOODS_CODE, CART_SN) IN ( SELECT GOODS_CODE, CART_SN FROM TB_PURCHS_GOODS WHERE PURCHS_SN = #purchs_sn#  ) 
	</delete>
	
	
	<insert id="gnrl.order.insertPay" parameterClass="hashMap">
		INSERT INTO TB_PAY (PURCHS_SN, TID, RESULTCODE, RESULTMSG, EVENTCODE, TOTPRICE, MOID, PAYMETHOD, APPLNUM, APPLDATE, APPLTIME, PAY_DEVICE,
  					CARD_NUM, CARD_INTEREST, CARD_QUOTA, CARD_CODE, CARD_BANKCODE, 
					VACT_NUM, VACT_BANKCODE, VACTBANKNAME, VACT_NAME, VACT_INPUTNAME, VACT_DATE, VACT_TIME,
					ACCT_BANKCODE, CSHR_RESULTCODE, CSHR_TYPE)
		VALUES ( #purchs_sn#, #tid#, #resultcode#, #resultmsg#, #eventcode#, #totprice#, #moid#, #paymethod#, #applnum#, #appldate#, #appltime#, #pay_device#, 
			#card_num#, #card_interest#, #card_quota#, #card_code#, #card_bankcode#,
			#vact_num#, #vact_bankcode#, #vactbankname#, #vact_name#, #vact_inputname#, #vact_date#, #vact_time#,
			#acct_bankcode#, #cshr_resultcode#, #cshr_type# )
	</insert>
	
	<select id="gnrl.order.getPay" parameterClass="hashMap" resultClass="hashMap">
		SELECT *
		FROM TB_PAY
		WHERE PURCHS_SN = #purchs_sn#
	</select>

	<update id="gnrl.order.updateStatus" parameterClass="hashMap" >
		UPDATE TB_PURCHS SET STATUS = #status#
		WHERE PURCHS_SN IN (SELECT PURCHS_SN FROM TB_PAY WHERE MOID = #oid#)
	</update>
	
</sqlMap>