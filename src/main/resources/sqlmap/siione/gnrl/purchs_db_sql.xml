<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'> 
<sqlMap namespace="gnrl">

	<typeAlias alias="hashMap" type="java.util.HashMap"/>

	<sql id="wherePurchsList">
		AND P.ESNTL_ID = #esntl_id# AND P.DELETE_AT = 'N'
		<isNotEmpty property="start_dt">
			AND P.PURCHS_DE BETWEEN #start_dt# AND #end_dt#
		</isNotEmpty>
	</sql>
		
	<select id="gnrl.purchs.selectPurchs" parameterClass="hashMap" resultClass="hashMap">
		SELECT PURCHS_SN, PURCHS_DE, TOT_SETLE_AMOUNT, REAL_SETLE_AMOUNT, USE_POINT
			, CRTFC_NO, SETLE_DT, SETLE_IP, ESNTL_ID, WRITNG_ID, WRITNG_DT
		FROM TB_PURCHS P
		WHERE ESNTL_ID = #esntl_id#
	</select>

	<select id="gnrl.purchs.selectPurchsGoods" parameterClass="hashMap" resultClass="hashMap">
		SELECT PURCHS_SN, CART_SN
		FROM TB_PURCHS_GOODS P
		WHERE PURCHS_SN = #purchs_sn#
	</select>

	<select id="gnrl.purchs.selectPurchsListCount" parameterClass="hashMap" resultClass="Integer">
		SELECT COUNT(1)
		FROM TB_PURCHS P
		WHERE 1 = 1
		<include refid="wherePurchsList"/>
	</select>
		
	<select id="gnrl.purchs.selectPurchsList" parameterClass="hashMap" resultClass="hashMap">
		SELECT P.PURCHS_SN, P.PURCHS_DE, P.TOT_SETLE_AMOUNT
		FROM (
			SELECT A.PURCHS_SN, ROWNUM AS RNUM
			FROM (
					SELECT P.PURCHS_SN
					FROM TB_PURCHS P
					WHERE 1= 1
					<include refid="wherePurchsList"/>
					ORDER BY P.PURCHS_SN DESC
			) A
		) B
			INNER JOIN TB_PURCHS P ON B.PURCHS_SN = P.PURCHS_SN			
		WHERE RNUM BETWEEN #startIdx# AND #endIdx#
		ORDER BY RNUM
	</select>
	
	<select id="gnrl.purchs.selectPurchsCartList" parameterClass="hashMap" resultClass="hashMap">
	<![CDATA[
		SELECT G.FILE_CODE, P.PURCHS_SN, P.PURCHS_DE, P.TOT_SETLE_AMOUNT, CG.CART_SN, G.GOODS_NM, G.GOODS_CODE
			, CG.TOUR_DE, CG.CHKIN_DE, CG.CHCKT_DE, CG.BEGIN_TIME, CG.END_TIME, G.CL_SE, CG.PURCHS_AMOUNT
			, CASE WHEN (SELECT COUNT(1) FROM TB_PURCHS_REVIEW WHERE PURCHS_SN = P.PURCHS_SN AND CART_SN = CG.CART_SN AND GOODS_CODE = G.GOODS_CODE AND DELETE_AT = 'N' ) > 0 THEN 'Y' ELSE 'N' END EXISTREVIEW
		FROM TB_PURCHS P
			INNER JOIN TB_PURCHS_GOODS PG ON P.PURCHS_SN = PG.PURCHS_SN
			INNER JOIN TB_CART_GOODS CG ON PG.CART_SN = CG.CART_SN
			INNER JOIN TB_GOODS G ON CG.GOODS_CODE = G.GOODS_CODE
		WHERE P.PURCHS_SN = #purchs_sn#
		ORDER BY CG.CART_SN
	]]>
	</select>
	
	<select id="gnrl.purchs.selectPurchsDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT P.REAL_SETLE_AMOUNT, P.PURCHS_DE
		FROM TB_PURCHS P
			INNER JOIN TB_PURCHS_GOODS PG ON P.PURCHS_SN = PG.PURCHS_SN
			INNER JOIN TB_CART_GOODS CG ON PG.CART_SN = CG.CART_SN
		WHERE P.PURCHS_SN = #purchs_sn# AND PG.CART_SN = #cart_sn#
	</select>
			
	<update id="gnrl.purchs.cancelPurchs" parameterClass="hashMap" >
		UPDATE TB_PURCHS SET DELETE_AT = 'Y', DELETE_ID = #esntl_id#, DELETE_DT = SYSDATE
		WHERE PURCHS_SN = #purchs_sn#
	</update>
	
	<select id="gnrl.purchs.viewPurchs" parameterClass="hashMap" resultClass="hashMap">
		SELECT P.PURCHS_SN, P.ESNTL_ID, P.PURCHS_DE
		FROM TB_PURCHS P
		WHERE P.PURCHS_SN = #purchs_sn#
	</select>

	<select id="gnrl.purchs.getOrderInfoGoodsTime" parameterClass="hashMap" resultClass="hashMap">
	<![CDATA[
		SELECT CG.CART_SN, CG.TOUR_DE, CG.BEGIN_TIME, CG.END_TIME, CG.CHKIN_DE, CG.CHCKT_DE, GOODS.GOODS_NM, FN_GET_PURCHS_OPTION(CG.CART_SN) AS OPTIONS, GOODS.GOODS_CODE
		FROM TB_PURCHS P
		INNER JOIN TB_PURCHS_GOODS  PG ON P.PURCHS_SN = PG.PURCHS_SN
		INNER JOIN TB_CART_GOODS CG ON PG.CART_SN = CG.CART_SN
		INNER JOIN TB_GOODS GOODS ON CG.GOODS_CODE = GOODS.GOODS_CODE
		WHERE P.ESNTL_ID = #esntl_id# AND CG.DELETE_AT = 'N' AND GOODS.DELETE_AT = 'N' AND CG.EXPRTN_AT = 'N' AND CG.PURCHS_AT = 'Y' AND GOODS.CL_SE <> 'S'		
			AND CG.TOUR_DE IS NOT NULL
		ORDER BY CG.TOUR_DE, CG.BEGIN_TIME, CG.CHKIN_DE	
	]]>
	</select>	
</sqlMap>