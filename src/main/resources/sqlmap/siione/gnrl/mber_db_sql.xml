<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'> 
<sqlMap namespace="gnrl">
	
	<typeAlias alias="hashMap" type="java.util.HashMap"/>
	
	<select id="gnrl.mber.selectUserInfo" parameterClass="hashMap" resultClass="hashMap"> 
		SELECT ESNTL_ID
		     , USER_ID
		     , USER_NM
		     , AUTHOR_CL
		     , USE_AT		     
		     , WRITNG_ID
		     , TO_CHAR(WRITNG_DT,'YYYY-MM-DD') WRITNG_DE
		     , UPDT_ID
		     , TO_CHAR(UPDT_DT,'YYYY-MM-DD') UPDT_DE
		     , PASSWORD
		     , CRTFC_AT
		     , EMAIL
		  FROM TB_USER
		 WHERE USER_ID = #user_id#
		   AND USE_AT = 'Y'
	</select>
	
	<insert id="gnrl.mber.insertUserLog">
	<![CDATA[
		INSERT INTO TB_LOGIN_HIST (LOGIN_SN, ESNTL_ID, LOGIN_IP, LOGIN_DT)
		                   VALUES (SQ_LOGIN_SN.NEXTVAL, #esntl_id#, #conect_ip#, SYSDATE)
	]]>
	</insert>
	
	<insert id="gnrl.mber.insertConnectLog">
	<![CDATA[
		INSERT INTO TB_CONECT_HIST (CONECT_SN, CONECT_ID, CONECT_IP, CONECT_DT)
		                    VALUES (SQ_CONECT_SN.NEXTVAL, #esntl_id#, #conect_ip#, SYSDATE)	
	]]>
	</insert>	
	
	<select id="gnrl.mber.chkUserInfo" parameterClass="hashMap" resultClass="Integer"> 
		SELECT Count(1)
		  FROM TB_USER
		 WHERE UPPER(USER_ID) = UPPER(#user_id#)
	</select>

	<select id="gnrl.mber.getMaxEsntlId"  parameterClass="hashMap" resultClass="String">
		SELECT 'GNRL' || LPAD(NVL(MAX(SUBSTR(ESNTL_ID, 5)), 0) + 1, 16, '0') FROM TB_USER
	</select>
	
	<insert id="gnrl.mber.insertUser" parameterClass="hashMap">
	<![CDATA[
		INSERT INTO TB_USER (ESNTL_ID, USER_ID, USER_NM, WRITNG_ID, PASSWORD, WRITNG_DT
			, AUTHOR_CL, USE_AT, MOBLPHON_NO, CRTFC_AT, EMAIL_RECPTN_AT, EMAIL, SEX, BIRTH, CERTKEY)
		VALUES (#esntl_id#, #user_id#, #user_nm#, #esntl_id#, #password#, SYSDATE
			, 'G', 'Y', #moblphon_no#, #crtfc_at#, #email_recptn_at#, #email#, #sex#, #birth#, #certkey# )
	]]>
	</insert>

	<select id="gnrl.mber.chkUserCert" parameterClass="hashMap" resultClass="Integer"> 
		SELECT Count(1)
		  FROM TB_USER
		 WHERE CERTKEY = #certkey# AND CRTFC_AT = 'N'
	</select>

	<update id="gnrl.mber.updateUserCert" parameterClass="hashMap">
	<![CDATA[
		UPDATE TB_USER SET CRTFC_AT = 'Y'
		WHERE CERTKEY = #certkey#
	]]>
	</update>

	<select id="gnrl.mber.chkUserInfoPw" parameterClass="hashMap" resultClass="hashMap"> 
		SELECT CERTKEY
		  FROM TB_USER
		 WHERE UPPER(USER_ID) = UPPER(#user_id#) AND UPPER(USER_NM) = UPPER(#user_nm#)
	</select>
	
	<update id="gnrl.mber.updateCertKey" parameterClass="hashMap">
	<![CDATA[
		UPDATE TB_USER SET CERTKEY = #certkey#
		WHERE UPPER(USER_ID) = UPPER(#user_id#)
	]]>
	</update>

	<update id="gnrl.mber.updatePassword" parameterClass="hashMap">
	<![CDATA[
		UPDATE TB_USER SET PASSWORD = #password#
		WHERE CERTKEY = #certkey#
	]]>
	</update>

	<select id="gnrl.mber.viewUserInfo" parameterClass="hashMap" resultClass="hashMap"> 
		SELECT ESNTL_ID
		     , USER_ID
		     , USER_NM
		     , AUTHOR_CL
		     , USE_AT		     
		     , WRITNG_ID
		     , TO_CHAR(WRITNG_DT,'YYYY-MM-DD') WRITNG_DE
		     , UPDT_ID
		     , TO_CHAR(UPDT_DT,'YYYY-MM-DD') UPDT_DE
		     , PASSWORD
		     , CRTFC_AT
		     , EMAIL
		     , MOBLPHON_NO
		     , EMAIL_RECPTN_AT, SEX
		     , TO_CHAR(TO_DATE(BIRTH, 'YYYYMMDD'), 'YYYY-MM-DD') BIRTH
		  FROM TB_USER
		 WHERE ESNTL_ID = #esntl_id#
		   AND USE_AT = 'Y'
	</select>
	
	<update id="gnrl.mber.modifyUser" parameterClass="hashMap">
		UPDATE TB_USER SET USER_NM = #user_nm#, MOBLPHON_NO = #moblphon_no#, BIRTH = #birth#, SEX = #sex#, EMAIL_RECPTN_AT = #email_recptn_at#
		<isNotEmpty property="password">
		   , PASSWORD = #password#
		</isNotEmpty>		
		WHERE ESNTL_ID = #esntl_id# AND USE_AT = 'Y'
	</update>
	
	<select id="gnrl.mber.getUserCount" resultClass="Integer">
		SELECT COUNT(1) FROM TB_USER
		WHERE USE_AT = 'Y' AND AUTHOR_CL = 'G'
	</select>
	
</sqlMap>