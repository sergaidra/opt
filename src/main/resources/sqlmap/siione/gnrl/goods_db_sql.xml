<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'> 
<sqlMap namespace="gnrl">

	<typeAlias alias="hashMap" type="java.util.HashMap"/>

	<resultMap id="goodsDetail" class="hashMap">
        <result property="GOODS_CODE"                column="GOODS_CODE"                jdbcType="string" javaType="string"/>
        <result property="GOODS_NM"                  column="GOODS_NM"                  jdbcType="string" javaType="string"/>
        <result property="GOODS_INTRCN"              column="GOODS_INTRCN"              jdbcType="CLOB"   javaType="string"/>
        <result property="DELETE_AT"                 column="DELETE_AT"                 jdbcType="string" javaType="string"/>
        <result property="FILE_CODE"                 column="FILE_CODE"                 jdbcType="string" javaType="string"/>
        <result property="WRITNG_ID"                 column="WRITNG_ID"                 jdbcType="string" javaType="string"/>
        <result property="WRITNG_DE"                 column="WRITNG_DE"                 jdbcType="string" javaType="string"/>
        <result property="UPDT_ID"                   column="UPDT_ID"                   jdbcType="string" javaType="string"/>
        <result property="UPDT_DE"                   column="UPDT_DE"                   jdbcType="string" javaType="string"/>
        <result property="CTY_CODE"                  column="CTY_CODE"                  jdbcType="string" javaType="string"/>
        <result property="CTY_NM"                    column="CTY_NM"                    jdbcType="string" javaType="string"/>
        <result property="UPPER_CL_CODE"             column="UPPER_CL_CODE"             jdbcType="string" javaType="string"/>
        <result property="CL_CODE"                   column="CL_CODE"                   jdbcType="string" javaType="string"/>
        <result property="CL_NM"                     column="CL_NM"                     jdbcType="string" javaType="string"/>
        <result property="WAIT_TIME"                 column="WAIT_TIME"                 jdbcType="string" javaType="string"/>
        <result property="MVMN_TIME"                 column="MVMN_TIME"                 jdbcType="string" javaType="string"/>
        <result property="ACT_LA"                    column="ACT_LA"                    jdbcType="string" javaType="string"/>
        <result property="ACT_LO"                    column="ACT_LO"                    jdbcType="string" javaType="string"/>
        <result property="VOCHR_TICKET_TY"           column="VOCHR_TICKET_TY"           jdbcType="string" javaType="string"/>
        <result property="VOCHR_NTSS_REQRE_TIME"     column="VOCHR_NTSS_REQRE_TIME"     jdbcType="string" javaType="string"/>
        <result property="VOCHR_USE_MTH"             column="VOCHR_USE_MTH"             jdbcType="string" javaType="string"/>
        <result property="GUIDANCE_USE_TIME"         column="GUIDANCE_USE_TIME"         jdbcType="string" javaType="string"/>
        <result property="GUIDANCE_REQRE_TIME"       column="GUIDANCE_REQRE_TIME"       jdbcType="string" javaType="string"/>
        <result property="GUIDANCE_AGE_DIV"          column="GUIDANCE_AGE_DIV"          jdbcType="string" javaType="string"/>
        <result property="GUIDANCE_TOUR_SCHDUL"      column="GUIDANCE_TOUR_SCHDUL"      jdbcType="string" javaType="string"/>
        <result property="GUIDANCE_PRFPLC_LC"        column="GUIDANCE_PRFPLC_LC"        jdbcType="string" javaType="string"/>
        <result property="GUIDANCE_EDC_CRSE"         column="GUIDANCE_EDC_CRSE"         jdbcType="string" javaType="string"/>
        <result property="GUIDANCE_OPTN_MATTER"      column="GUIDANCE_OPTN_MATTER"      jdbcType="string" javaType="string"/>
        <result property="GUIDANCE_PICKUP"           column="GUIDANCE_PICKUP"           jdbcType="string" javaType="string"/>
        <result property="GUIDANCE_PRPARETG"         column="GUIDANCE_PRPARETG"         jdbcType="string" javaType="string"/>
        <result property="GUIDANCE_INCLS_MATTER"     column="GUIDANCE_INCLS_MATTER"     jdbcType="string" javaType="string"/>
        <result property="GUIDANCE_NOT_INCLS_MATTER" column="GUIDANCE_NOT_INCLS_MATTER" jdbcType="string" javaType="string"/>
        <result property="ADIT_GUIDANCE"             column="ADIT_GUIDANCE"             jdbcType="string" javaType="string"/>
        <result property="ATENT_MATTER"              column="ATENT_MATTER"              jdbcType="string" javaType="string"/>
        <result property="CHANGE_REFND_REGLTN"       column="CHANGE_REFND_REGLTN"       jdbcType="string" javaType="string"/>
        <result property="INTRCN_GOODS_TY"           column="INTRCN_GOODS_TY"           jdbcType="string" javaType="string"/>
        <result property="INTRCN_USE_TIME"           column="INTRCN_USE_TIME"           jdbcType="string" javaType="string"/>
        <result property="INTRCN_MEET_TIME"          column="INTRCN_MEET_TIME"          jdbcType="string" javaType="string"/>
        <result property="INTRCN_REQRE_TIME"         column="INTRCN_REQRE_TIME"         jdbcType="string" javaType="string"/>
        <result property="INTRCN_PROVD_LANG"         column="INTRCN_PROVD_LANG"         jdbcType="string" javaType="string"/>
        <result property="INTRCN_POSBL_AGE"          column="INTRCN_POSBL_AGE"          jdbcType="string" javaType="string"/>
        <result property="INTRCN_PLACE"              column="INTRCN_PLACE"              jdbcType="string" javaType="string"/>
        <result property="CL_SE"                     column="CL_SE"                     jdbcType="string" javaType="string"/>
        <result property="SORT_ORDR"                 column="SORT_ORDR"                 jdbcType="string" javaType="string"/>
        <result property="CF_MIN_BEGIN_DE"           column="CF_MIN_BEGIN_DE"           jdbcType="string" javaType="string"/>
        <result property="CF_MAX_END_DE"             column="CF_MAX_END_DE"             jdbcType="string" javaType="string"/>
        <result property="GOODS_INTRCN_SIMPL"        column="GOODS_INTRCN_SIMPL"             jdbcType="string" javaType="string"/>        
        
	</resultMap>

	<resultMap id="goodsDetailSub" class="hashMap">
        <result property="GOODS_CODE"                column="GOODS_CODE"                jdbcType="string" javaType="string"/>
        <result property="GOODS_NM"                  column="GOODS_NM"                  jdbcType="string" javaType="string"/>
        <result property="GOODS_INTRCN"              column="GOODS_INTRCN"              jdbcType="CLOB"   javaType="string"/>
        <result property="GOODS_INTRCN_SIMPL"        column="GOODS_INTRCN_SIMPL"        jdbcType="string"   javaType="string"/>
        <result property="FILE_CODE"                  column="FILE_CODE"                  jdbcType="string" javaType="string"/>
        <result property="FILE_SN"                  column="FILE_SN"                  jdbcType="string" javaType="string"/>
	</resultMap>
	
	<sql id="whereList">
		<isNotEmpty property="cty_code">
		   AND CTY_CODE = #cty_code#
		</isNotEmpty>
		<isNotEmpty property="cl_code">
		   AND CL_CODE = #cl_code#
		</isNotEmpty>
		<isEmpty property="cl_code">
			<isNotEmpty property="upper_cl_code">
		   AND CL_CODE IN (SELECT CL_CODE FROM TB_TOUR_CL X WHERE X.UPPER_CL_CODE = #upper_cl_code#)
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="keyword">
		   AND GOODS_CODE IN ( SELECT GOODS_CODE FROM TB_GOODS_KWRD WHERE UPPER(KWRD) LIKE '%' || UPPER(#keyword#) || '%' )
		</isNotEmpty>
		<isEqual property="category" compareValue="H">
		   AND HOTDEAL_AT = 'Y'
		</isEqual>
		<isEqual property="category" compareValue="R">
		   AND RECOMEND_AT = 'Y'
		</isEqual>	
	</sql>

	<select id="gnrl.goods.selectGoodsExpsrList1" resultClass="hashMap">
	<![CDATA[
		SELECT A.*
		FROM (
				SELECT G.GOODS_CODE, GOODS_NM, GOODS_INTRCN, FILE_CODE, GOODS_INTRCN_SIMPL
					, ( SELECT NVL(MAX(FILE_SN), '') FROM TB_FILE_DETAIL WHERE FILE_CODE = G.FILE_CODE AND HOTDEAL_AT = 'Y' ) AS FILE_SN, RNUM
				FROM (
					SELECT GOODS_CODE, ROWNUM AS RNUM
					FROM (		  
						SELECT GOODS_CODE
						FROM TB_GOODS 
						WHERE DELETE_AT = 'N'  AND HOTDEAL_MAIN_AT = 'Y'
						ORDER BY HOTDEAL_SORT_ORDR
					)  A		  
				) AA
				INNER JOIN TB_GOODS G ON AA.GOODS_CODE = G.GOODS_CODE
				WHERE AA.RNUM <= 6
		) A
		RIGHT OUTER JOIN (SELECT LEVEL AS LV FROM DUAL CONNECT BY LEVEL <= 6) B ON A.RNUM = B.LV
		ORDER BY B.LV
	]]>
	</select>
	
	<select id="gnrl.goods.selectGoodsExpsrList2" resultMap="goodsDetailSub">
	<![CDATA[
		SELECT A.*
		FROM (
				SELECT G.GOODS_CODE, GOODS_NM, GOODS_INTRCN, FILE_CODE, GOODS_INTRCN_SIMPL
					, ( SELECT NVL(MAX(FILE_SN), '') FROM TB_FILE_DETAIL WHERE FILE_CODE = G.FILE_CODE AND HOTDEAL_AT = 'Y' ) AS FILE_SN, RNUM
				FROM (
					SELECT GOODS_CODE, ROWNUM AS RNUM
					FROM (		  
						SELECT GOODS_CODE
						FROM TB_GOODS 
						WHERE DELETE_AT = 'N'  AND RECOMEND_MAIN_AT = 'Y'
						ORDER BY RECOMEND_SORT_ORDR
					)  A		  
				) AA
				INNER JOIN TB_GOODS G ON AA.GOODS_CODE = G.GOODS_CODE
				WHERE AA.RNUM <= 4
		) A
		RIGHT OUTER JOIN (SELECT LEVEL AS LV FROM DUAL CONNECT BY LEVEL <= 4) B ON A.RNUM = B.LV
		ORDER BY B.LV
	]]>
	</select>

	<select id="gnrl.goods.selectGoodsExpsrList3" resultMap="goodsDetailSub">
	<![CDATA[
				SELECT G.GOODS_CODE, GOODS_NM, GOODS_INTRCN, FILE_CODE, GOODS_INTRCN_SIMPL
					, ( SELECT NVL(MAX(FILE_SN), '') FROM TB_FILE_DETAIL WHERE FILE_CODE = G.FILE_CODE AND HOTDEAL_AT = 'Y' ) AS FILE_SN, RNUM
				FROM (
					SELECT GOODS_CODE, ROWNUM AS RNUM
					FROM (		  
						SELECT GOODS_CODE
						FROM TB_GOODS 
						WHERE DELETE_AT = 'N' 
						ORDER BY SORT_ORDR
					)  A		  
				) AA
				INNER JOIN TB_GOODS G ON AA.GOODS_CODE = G.GOODS_CODE
				WHERE AA.RNUM <= 10
				ORDER BY AA.RNUM
	]]>
	</select>

	<select id="gnrl.goods.selectGoodsExpsrList4" resultMap="goodsDetailSub">
	<![CDATA[
		SELECT A.*
		FROM (
				SELECT G.GOODS_CODE, GOODS_NM, GOODS_INTRCN, FILE_CODE, GOODS_INTRCN_SIMPL
					, ( SELECT NVL(MAX(FILE_SN), '') FROM TB_FILE_DETAIL WHERE FILE_CODE = G.FILE_CODE AND HOTDEAL_AT = 'Y' ) AS FILE_SN, RNUM
				FROM (
					SELECT GOODS_CODE, ROWNUM AS RNUM
					FROM (		  
						SELECT GOODS_CODE
						FROM TB_GOODS 
						WHERE DELETE_AT = 'N'  AND VIDEO_MAIN_EXPSR_AT = 'Y'
						ORDER BY SORT_ORDR
					)  A		  
				) AA
				INNER JOIN TB_GOODS G ON AA.GOODS_CODE = G.GOODS_CODE
				WHERE AA.RNUM <= 5
		) A
		RIGHT OUTER JOIN (SELECT LEVEL AS LV FROM DUAL CONNECT BY LEVEL <= 5) B ON A.RNUM = B.LV
		ORDER BY B.LV
	]]>
	</select>		
	<select id="gnrl.goods.selectUpperTourClMain" parameterClass="hashMap" resultClass="hashMap">
		SELECT CL_CODE
		     , CL_NM
		     , FILE_CODE
		     , DELETE_AT
		     , WRITNG_ID
		     , TO_CHAR(WRITNG_DT,'YYYY-MM-DD') WRITNG_DE 
		     , UPDT_ID
		     , TO_CHAR(UPDT_DT,'YYYY-MM-DD') UPDT_DE
		     , (SELECT COUNT(1) FROM TB_GOODS X WHERE X.CL_CODE = A.CL_CODE) AS GOODS_CNT
		     , SORT_ORDR
		     , DC
		  FROM TB_TOUR_CL A
		 WHERE DELETE_AT = 'N'
		<isNotEmpty property="upper_cl_code">
		   AND UPPER_CL_CODE = #upper_cl_code#
		</isNotEmpty>
		<isNotEmpty property="cl_code_arr">
		   AND CL_CODE IN <iterate property="cl_code_arr" open=" (" conjunction="," close=")">#cl_code_arr[]#</iterate>
		</isNotEmpty>
		 ORDER BY SORT_ORDR
	</select>
	
	<select id="gnrl.goods.selectGoodsListCount" parameterClass="hashMap" resultClass="Integer">
		SELECT COUNT(1)
		FROM TB_GOODS A
		WHERE DELETE_AT = 'N'
		 <include refid="whereList"/>	
	</select>

	<select id="gnrl.goods.selectGoodsList" parameterClass="hashMap" resultClass="hashMap"> 
		SELECT A.GOODS_CODE
			     , A.GOODS_NM
			     , A.DELETE_AT
			     , A.FILE_CODE
			     , A.WAIT_TIME
			     , A.MVMN_TIME
			     , A.FILE_CODE
			     , A.CTY_CODE
			     , (SELECT CTY_NM FROM TB_CTY X WHERE X.CTY_CODE = A.CTY_CODE) CTY_NM
			     , A.CL_CODE
			     , (SELECT CL_NM FROM TB_TOUR_CL X WHERE X.CL_CODE = A.CL_CODE) CL_NM
			     , (SELECT CL_CODE FROM TB_TOUR_CL X WHERE X.UPPER_CL_CODE = '00000' START WITH X.CL_CODE = A.CL_CODE CONNECT BY PRIOR UPPER_CL_CODE = CL_CODE) UPPER_CL_CODE
			     , (SELECT CL_NM FROM TB_TOUR_CL X WHERE X.UPPER_CL_CODE = '00000' START WITH X.CL_CODE = A.CL_CODE CONNECT BY PRIOR UPPER_CL_CODE = CL_CODE) UPPER_CL_NM
			     , A.CTY_CODE
			     , (SELECT CTY_NM FROM TB_CTY X WHERE X.CTY_CODE = A.CTY_CODE) CTY_NM
			     , COUNT(A.GOODS_CODE) OVER() AS TOT_CNT
			     , (SELECT TO_CHAR(NVL(MIN(X.SETUP_AMOUNT), 0), 'FM9,999,999') FROM TB_GOODS_NMPR X WHERE X.DELETE_AT = 'N' AND X.GOODS_CODE = A.GOODS_CODE) CF_MIN_AMOUNT
			     , (SELECT NVL(MIN(X.SETUP_AMOUNT), 0) FROM TB_GOODS_NMPR X WHERE X.DELETE_AT = 'N' AND X.GOODS_CODE = A.GOODS_CODE) MIN_AMOUNT
			     , (SELECT CASE WHEN COUNT(1) > 0 THEN 'Y' ELSE 'N' END FROM TB_BKMK WHERE ESNTL_ID = #esntl_id# AND GOODS_CODE = A.GOODS_CODE) BKMK	
		FROM (
			SELECT GOODS_CODE, ROWNUM AS RNUM
			FROM (
				SELECT B.GOODS_CODE, ROWNUM AS RNUM
				FROM (
					SELECT GOODS_CODE
					FROM TB_GOODS G
					WHERE DELETE_AT = 'N' 
					<include refid="whereList"/>
					<isNotEmpty property="sortOrd">
						<isEqual property="sortOrd" compareValue="L">
							ORDER BY MIN_AMOUNT, GOODS_NM
						</isEqual>
						<isEqual property="sortOrd" compareValue="H">
							ORDER BY MIN_AMOUNT DESC, GOODS_NM
						</isEqual>
					</isNotEmpty>
					<isEmpty property="sortOrd">
				 	ORDER BY SORT_ORDR, GOODS_NM
					</isEmpty>
				) B
			) AA
			WHERE RNUM BETWEEN #startIdx# AND #endIdx#
		) G
		INNER JOIN TB_GOODS A ON G.GOODS_CODE = A.GOODS_CODE
		ORDER BY G.RNUM
	</select>

	<select id="gnrl.goods.selectGoodsDetail" parameterClass="hashMap" resultMap="goodsDetail"> 
	<![CDATA[	
        SELECT GOODS_CODE
             , GOODS_NM
             , REPLACE(REPLACE(GOODS_INTRCN,CHR(10),'<BR>'),CHR(13),' ') GOODS_INTRCN
             , DELETE_AT
             , FILE_CODE
             , WRITNG_ID
             , TO_CHAR(WRITNG_DT,'YYYY-MM-DD') WRITNG_DE
             , UPDT_ID
             , TO_CHAR(UPDT_DT,'YYYY-MM-DD') UPDT_DE
             , WAIT_TIME
             , MVMN_TIME
             , ACT_LA
             , ACT_LO
		     , CTY_CODE
		     , (SELECT CTY_NM FROM TB_CTY X WHERE X.CTY_CODE = A.CTY_CODE) CTY_NM
             , (SELECT UPPER_CL_CODE FROM TB_TOUR_CL X WHERE X.CL_CODE = A.CL_CODE) UPPER_CL_CODE
             , CL_CODE
             , (SELECT C.CL_NM FROM TB_TOUR_CL C WHERE A.CL_CODE = C.CL_CODE) CL_NM
             , CL_SE
             , SORT_ORDR
             , VOCHR_TICKET_TY
             , VOCHR_NTSS_REQRE_TIME
             , FN_CONVERT_BR(VOCHR_USE_MTH            ) VOCHR_USE_MTH
             , FN_CONVERT_BR(GUIDANCE_USE_TIME        ) GUIDANCE_USE_TIME
             , FN_CONVERT_BR(GUIDANCE_REQRE_TIME      ) GUIDANCE_REQRE_TIME
             , FN_CONVERT_BR(GUIDANCE_AGE_DIV         ) GUIDANCE_AGE_DIV
             , FN_CONVERT_BR(GUIDANCE_TOUR_SCHDUL     ) GUIDANCE_TOUR_SCHDUL
             , FN_CONVERT_BR(GUIDANCE_PRFPLC_LC       ) GUIDANCE_PRFPLC_LC
             , FN_CONVERT_BR(GUIDANCE_EDC_CRSE        ) GUIDANCE_EDC_CRSE
             , FN_CONVERT_BR(GUIDANCE_OPTN_MATTER     ) GUIDANCE_OPTN_MATTER
             , FN_CONVERT_BR(GUIDANCE_PICKUP          ) GUIDANCE_PICKUP
             , FN_CONVERT_BR(GUIDANCE_PRPARETG        ) GUIDANCE_PRPARETG
             , FN_CONVERT_BR(GUIDANCE_INCLS_MATTER    ) GUIDANCE_INCLS_MATTER
             , FN_CONVERT_BR(GUIDANCE_NOT_INCLS_MATTER) GUIDANCE_NOT_INCLS_MATTER
             , FN_CONVERT_BR(ADIT_GUIDANCE            ) ADIT_GUIDANCE
             , FN_CONVERT_BR(ATENT_MATTER             ) ATENT_MATTER
             , FN_CONVERT_BR(CHANGE_REFND_REGLTN      ) CHANGE_REFND_REGLTN
             , INTRCN_GOODS_TY
             , INTRCN_USE_TIME
             , INTRCN_MEET_TIME
             , INTRCN_REQRE_TIME
             , INTRCN_PROVD_LANG
             , INTRCN_POSBL_AGE
             , INTRCN_PLACE
             , (SELECT TO_CHAR(NVL(TO_DATE(MIN(BEGIN_DE), 'YYYYMMDD'), SYSDATE), 'YYYY-MM-DD') FROM TB_GOODS_SCHDUL X WHERE X.DELETE_AT = 'N' AND  X.GOODS_CODE = A.GOODS_CODE) CF_MIN_BEGIN_DE             
             , (SELECT TO_CHAR(TO_DATE(MAX(END_DE), 'YYYYMMDD'), 'YYYY-MM-DD') FROM TB_GOODS_SCHDUL X WHERE X.DELETE_AT = 'N' AND  X.GOODS_CODE = A.GOODS_CODE) CF_MAX_END_DE
             , GOODS_INTRCN_SIMPL                          
          FROM TB_GOODS A
         WHERE DELETE_AT = 'N' 
           AND GOODS_CODE = #goods_code#
	]]>		   
	</select>

	<select id="gnrl.goods.selectGoodsSchdulList" parameterClass="hashMap" resultClass="hashMap">
		SELECT BEGIN_DE, END_DE 
		  FROM TB_GOODS_SCHDUL GS
		 WHERE DELETE_AT = 'N'
		   AND GOODS_CODE = #goods_code#
		 ORDER BY BEGIN_DE ASC
	</select>

	<select id="gnrl.goods.selectGoodsNmprList" parameterClass="hashMap" resultClass="hashMap">
		SELECT GOODS_CODE
		     , SETUP_SE
		     , NMPR_SN
		     , NMPR_CND
		     , FIXED_AT
		     , SETUP_AMOUNT
		     , SETUP_RATE
		     , NMPR_CO
		     , MAX_NMPR_CO
		     , ADIT_NMPR_AMOUNT
		     , NVL(DSCNT_RATE, 1) AS DSCNT_RATE
		  FROM TB_GOODS_NMPR GN
		 WHERE DELETE_AT = 'N'
		   AND GOODS_CODE = #goods_code#
		 ORDER BY SORT_ORDR
	</select>
	
	<select id="gnrl.goods.selectGoodsNmprBySetupSeList" parameterClass="hashMap" resultClass="hashMap">
		SELECT GOODS_CODE
		     , SETUP_SE
		     , NMPR_SN
		     , NMPR_CND
		     , FIXED_AT
		     , SETUP_AMOUNT
		     , SETUP_RATE
		     , NMPR_CO
		     , MAX_NMPR_CO
		     , ADIT_NMPR_AMOUNT
		     , NVL(DSCNT_RATE, 1) AS DSCNT_RATE
		  FROM TB_GOODS_NMPR GN
		 WHERE DELETE_AT = 'N'
		   AND GOODS_CODE = #goods_code#
		   AND SETUP_SE = #setup_se# 
		 ORDER BY SORT_ORDR
	</select>	

	<select id="gnrl.goods.selectGoodsTimeList" parameterClass="hashMap" resultClass="hashMap">
		SELECT TIME_SN
		     , BEGIN_TIME
		     , END_TIME, BEGIN_TIME||END_TIME TOUR_TIME
		  FROM TB_GOODS_TIME GT
		 WHERE DELETE_AT = 'N'
		   AND GOODS_CODE = #goods_code#
		 ORDER BY BEGIN_TIME
	</select>
	
	<select id="gnrl.goods.getReviewScore" parameterClass="hashMap" resultClass="hashMap">
		SELECT NVL(CEIL(AVG(REVIEW_SCORE)), 0) AS CEIL_REVIEW_SCORE, TO_CHAR(NVL(AVG(REVIEW_SCORE), 0), 'FM999990.0') AS REVIEW_SCORE, COUNT(1) REVIEW_COUNT FROM TB_PURCHS_REVIEW
		WHERE GOODS_CODE = #goods_code#
	</select>
	
	<select id="gnrl.goods.getReviewCount" parameterClass="hashMap" resultClass="Integer">
		SELECT COUNT(1) FROM TB_PURCHS_REVIEW
		WHERE GOODS_CODE = #goods_code#
	</select>
	
	<select id="gnrl.goods.getReview" parameterClass="hashMap" resultClass="hashMap">
		SELECT PR.REVIEW_CN, PR.REVIEW_SCORE, TO_CHAR(PR.WRITNG_DT, 'YYYY-MM-DD') AS WRITNG_DT, U.USER_NM
		FROM (
			SELECT PURCHS_SN, CART_SN, ROWNUM AS RNUM
			FROM (
				SELECT PURCHS_SN, CART_SN FROM TB_PURCHS_REVIEW
				WHERE GOODS_CODE = #goods_code#
				ORDER BY WRITNG_DT DESC
			) A
		) B
		INNER JOIN TB_PURCHS_REVIEW PR ON B.PURCHS_SN = PR.PURCHS_SN AND B.CART_SN = PR.CART_SN
		INNER JOIN TB_USER U ON PR.ESNTL_ID = U.ESNTL_ID
		WHERE RNUM BETWEEN #startIdx# AND #endIdx#
		ORDER BY B.RNUM	
	</select>
	
	<insert id="gnrl.goods.insertOpinion"  parameterClass="hashMap" >
		INSERT INTO TB_PURCHS_OPINION (OPINION_SN, OPINION_SJ, OPINION_CN, GOODS_CODE, DELETE_AT, WRITNG_ID, WRITNG_DT)
		SELECT NVL(MAX(OPINION_SN), 0) + 1, #opinion_sj#, #opinion_cn#, #goods_code#, 'N', #esntl_id#, SYSDATE
		FROM TB_PURCHS_OPINION
	</insert>
	
	<select id="gnrl.goods.getOpinionCount" parameterClass="hashMap" resultClass="Integer">
		SELECT COUNT(1) FROM TB_PURCHS_OPINION
		WHERE GOODS_CODE = #goods_code# AND DELETE_AT = 'N'
	</select>
	
	<select id="gnrl.goods.getOpinion" parameterClass="hashMap" resultClass="hashMap">
		SELECT PO.OPINION_SN, PO.OPINION_SJ, DBMS_LOB.SUBSTR( PO.OPINION_CN, 4000, 1) AS OPINION_CN, TO_CHAR(PO.WRITNG_DT, 'YYYY-MM-DD') AS WRITNG_DT, U.USER_NM
		FROM (
			SELECT OPINION_SN, ROWNUM AS RNUM
			FROM (
				SELECT OPINION_SN FROM TB_PURCHS_OPINION
				WHERE GOODS_CODE = #goods_code# AND DELETE_AT = 'N'
				ORDER BY WRITNG_DT DESC
			) A
		) B
		INNER JOIN TB_PURCHS_OPINION PO ON B.OPINION_SN = PO.OPINION_SN
		INNER JOIN TB_USER U ON PO.WRITNG_ID = U.ESNTL_ID
		WHERE RNUM BETWEEN #startIdx# AND #endIdx#
		ORDER BY B.RNUM	
	</select>
	
</sqlMap>