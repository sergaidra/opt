<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="admin">
	<typeAlias alias="hashMap" type="java.util.HashMap"/>
	<typeAlias alias="string" type="java.lang.String"/>

	<sql id="PurchsDAO.pagingQueryStart">
	  SELECT TT.* FROM (
	</sql>

	<sql id="PurchsDAO.pagingQueryEnd">
	  ) TT WHERE ROWSEQ BETWEEN #start# + 1 AND #page# * #limit#
	</sql>

	<sql id="PurchsDAO.whereForSelectPurchsList">
		 WHERE A.PURCHS_DE BETWEEN REPLACE(#FR_PURCHS_DE#, '-', '') AND REPLACE(#TO_PURCHS_DE#, '-', '')
		<isNotEmpty property="ESNTL_ID">
		   AND A.ESNTL_ID = #ESNTL_ID#
		</isNotEmpty>
		<isNotEmpty property="PYMNT_SE">
		   AND A.PYMNT_SE = #PYMNT_SE#
		</isNotEmpty>
		<isNotEmpty property="DELETE_AT">
		   AND A.DELETE_AT = #DELETE_AT#
		</isNotEmpty>
	</sql>

	<select id="PurchsDAO.selectPurchsListCount" parameterClass="hashMap" resultClass="java.lang.Integer">
		SELECT COUNT(PURCHS_SN)
		  FROM TB_PURCHS A
		<include refid="PurchsDAO.whereForSelectPurchsList"/>
	</select>

	<select id="PurchsDAO.selectPurchsList" parameterClass="hashMap" resultClass="hashMap">
		<include refid="PurchsDAO.pagingQueryStart"/><![CDATA[
		SELECT ROW_NUMBER() OVER(ORDER BY A.PURCHS_SN DESC) AS ROWSEQ
		     , A.PURCHS_SN
		     , A.ESNTL_ID
		     , (SELECT X.USER_NM FROM TB_USER X WHERE X.ESNTL_ID = A.ESNTL_ID) USER_NM
		     , SUBSTR(A.PURCHS_DE, 1, 4)||'-'||SUBSTR(A.PURCHS_DE, 5, 2)||'-'||SUBSTR(A.PURCHS_DE, 7, 2) PURCHS_DE
		     , TO_CHAR(A.WRITNG_DT, 'YYYY-MM-DD HH24:MI:SS') PURCHS_DT
		     , TO_CHAR(A.WRITNG_DT, 'HH24:MI:SS') PURCHS_TM
		     , A.TOT_SETLE_AMOUNT
		     , A.REAL_SETLE_AMOUNT
		     , A.USE_POINT
		     , DECODE(A.DELETE_AT, 'Y', 0, A.REAL_SETLE_AMOUNT) SETLE_AMOUNT
		     , DECODE(A.DELETE_AT, 'Y', 0, A.USE_POINT) SETLE_POINT
		     , A.PYMNT_SE
		     , (SELECT X.CODE_NM FROM TB_CMMN_DETAIL_CODE X WHERE X.CODE_ID = 'COM006' AND X.CODE = A.PYMNT_SE) PYMNT_SE_NM
		     , A.TOURIST_NM
		     , A.TOURIST_CTTPC
		     , A.DELETE_AT
		     , DECODE(A.DELETE_AT, 'Y', '구매취소', 'N', '구매') DELETE_AT_NM
		     , TO_CHAR(A.DELETE_DT, 'YYYY-MM-DD HH24:MI:SS') DELETE_DT
		     , (SELECT GOODS_NM
		          FROM TB_PURCHS_GOODS X
		             , TB_CART_GOODS Y
		             , TB_GOODS Z
		         WHERE A.PURCHS_SN = X.PURCHS_SN
		           AND X.CART_SN = Y.CART_SN
		           AND Y.GOODS_CODE = Z.GOODS_CODE
		           AND ROWNUM = 1) GOODS_NM
		     , (SELECT COUNT(1)-1
		          FROM TB_PURCHS_GOODS X
		             , TB_CART_GOODS Y
		         WHERE A.PURCHS_SN = X.PURCHS_SN
		           AND X.CART_SN = Y.CART_SN) GOODS_CNT
		  FROM TB_PURCHS A ]]>
		<include refid="PurchsDAO.whereForSelectPurchsList"/>
		<include refid="PurchsDAO.pagingQueryEnd"/>
	</select>

	<resultMap id="purchsMasterList" class="hashMap">
		<result property="GOODS_NM"      column="GOODS_NM"      jdbcType="string" javaType="string"/>
		<result property="CL_SE"         column="CL_SE"         jdbcType="string" javaType="string"/>
		<result property="CART_SN"       column="CART_SN"       jdbcType="string" javaType="string"/>
		<result property="GOODS_CODE"    column="GOODS_CODE"    jdbcType="string" javaType="string"/>
		<result property="ESNTL_ID"      column="ESNTL_ID"      jdbcType="string" javaType="string"/>
		<result property="PURCHS_AMOUNT" column="PURCHS_AMOUNT" jdbcType="string" javaType="string"/>
		<result property="ORIGIN_AMOUNT" column="ORIGIN_AMOUNT" jdbcType="string" javaType="string"/>
		<result property="TOUR_DE"       column="TOUR_DE"       jdbcType="string" javaType="string"/>
		<result property="BEGIN_TIME"    column="BEGIN_TIME"    jdbcType="string" javaType="string"/>
		<result property="END_TIME"      column="END_TIME"      jdbcType="string" javaType="string"/>
		<result property="CHKIN_DE"      column="CHKIN_DE"      jdbcType="string" javaType="string"/>
		<result property="CHCKT_DE"      column="CHCKT_DE"      jdbcType="string" javaType="string"/>
		<result property="EXPRTN_AT"     column="EXPRTN_AT"     jdbcType="string" javaType="string"/>
		<result property="PURCHS_AT"     column="PURCHS_AT"     jdbcType="string" javaType="string"/>
		<result property="DELETE_AT"     column="DELETE_AT"     jdbcType="string" javaType="string"/>
		<result property="FLIGHT_SN"     column="FLIGHT_SN"     jdbcType="string" javaType="string"/>
		<result property="CART_LIST"     column="{CART_SN=CART_SN, GOODS_CODE=GOODS_CODE}" select="PurchsDAO.selectPurchsGoodsNmprList" javaType="java.util.ArrayList"/>
		<result property="PICKUP_PLACE" column="PICKUP_PLACE" jdbcType="string" javaType="string"/>
		<result property="DROP_PLACE" column="DROP_PLACE" jdbcType="string" javaType="string"/>
		<result property="USE_NMPR" column="USE_NMPR" jdbcType="string" javaType="string"/>
		<result property="USE_PD" column="USE_PD" jdbcType="string" javaType="string"/>	
	</resultMap>

	<resultMap id="purchsDetailList" class="hashMap">
		<result property="CART_SN"    column="CART_SN"    jdbcType="string" javaType="string"/>
		<result property="GOODS_CODE" column="GOODS_CODE" jdbcType="string" javaType="string"/>
		<result property="NMPR_SN"    column="NMPR_SN"    jdbcType="string" javaType="string"/>
		<result property="SETUP_SE"   column="SETUP_SE"   jdbcType="string" javaType="string"/>
		<result property="SETUP_SE_NM" column="SETUP_SE_NM" jdbcType="string" javaType="string"/>
		<result property="NMPR_CO"    column="NMPR_CO"    jdbcType="string" javaType="string"/>
		<result property="AMOUNT"     column="AMOUNT"     jdbcType="string" javaType="string"/>
		<result property="NMPR_CND"   column="NMPR_CND"   jdbcType="string" javaType="string"/>
		<result property="CO_UNIT_SE" column="CO_UNIT_SE" jdbcType="string" javaType="string"/>
		<result property="CO_UNIT_SE_NM" column="CO_UNIT_SE_NM" jdbcType="string" javaType="string"/>
	</resultMap>

	<select id="PurchsDAO.selectPurchsGoodsList" parameterClass="hashMap" resultMap="purchsMasterList">
	<![CDATA[
		SELECT G.GOODS_NM
		     , G.CL_SE
		     , CG.CART_SN
		     , CG.GOODS_CODE
		     , CG.ESNTL_ID
		     /*, TO_CHAR(CG.PURCHS_AMOUNT, 'FM999,999,999,999,999') PURCHS_AMOUNT
		     , TO_CHAR(CG.ORIGIN_AMOUNT, 'FM999,999,999,999,999') ORIGIN_AMOUNT*/
		     , CG.PURCHS_AMOUNT
		     , CG.ORIGIN_AMOUNT
		     , CG.TOUR_DE
		     , CG.BEGIN_TIME
		     , CG.END_TIME
		     , CG.CHKIN_DE
		     , CG.CHCKT_DE
		     , CG.EXPRTN_AT
		     , CG.PURCHS_AT
		     , CG.DELETE_AT
		     , CG.FLIGHT_SN
		     , PG.PICKUP_PLACE
		     , PG.DROP_PLACE
		     , PG.USE_NMPR
		     , PG.USE_PD
		  FROM TB_PURCHS P
		     , TB_PURCHS_GOODS PG
		     , TB_CART_GOODS CG
		     , TB_GOODS G
		 WHERE P.PURCHS_SN = PG.PURCHS_SN
		   AND PG.CART_SN = CG.CART_SN
		   AND CG.GOODS_CODE = G.GOODS_CODE
		   AND P.PURCHS_SN = #PURCHS_SN#
		 ORDER BY NVL(CG.TOUR_DE, CG.CHKIN_DE), CG.BEGIN_TIME
	]]>
	</select>
	
	<select id="PurchsDAO.selectPurchsGoodsNmprList" parameterClass="hashMap" resultMap="purchsDetailList">
	<![CDATA[
		SELECT CM.CART_SN
		     , CM.GOODS_CODE
		     , CM.NMPR_SN
		     , CM.SETUP_SE
		     , C.CODE_NM as SETUP_SE_NM
		     , CM.NMPR_CO
		     /*, TO_CHAR(CM.AMOUNT, 'FM999,999,999,999,999') AMOUNT*/
		     , CM.AMOUNT
		     , GN.NMPR_CND
		     , GN.CO_UNIT_SE
		     , (SELECT CODE_NM FROM TB_CMMN_DETAIL_CODE X WHERE X.CODE_ID='COM008' AND X.CODE=GN.CO_UNIT_SE) CO_UNIT_SE_NM		
		  FROM TB_CART_NMPR CM
		     , TB_GOODS_NMPR GN
		     , TB_CMMN_DETAIL_CODE C
		 WHERE CM.GOODS_CODE = GN.GOODS_CODE
		   AND CM.SETUP_SE = GN.SETUP_SE
		   AND CM.NMPR_SN = GN.NMPR_SN
		   AND C.CODE_ID = 'COM003' 
		   AND C.CODE = CM.SETUP_SE
		   AND CM.CART_SN = #CART_SN#
		   AND CM.GOODS_CODE = #GOODS_CODE#
		 ORDER BY C.SORT_ORDR
	]]>
	</select>
	
	<sql id="PurchsDAO.whereForSelectPurchsListForSchdul">
		 WHERE P.PURCHS_SN IN (SELECT PG.PURCHS_SN 
		                         FROM TB_CART_GOODS CG
		                            , TB_PURCHS_GOODS PG
		                        WHERE CG.CART_SN = PG.CART_SN 
		                          AND CG.PURCHS_AT = 'Y'
		                          AND (   CG.CHKIN_DE BETWEEN REPLACE(#FR_TOUR_DE#, '-', '') AND REPLACE(#TO_TOUR_DE#, '-', '')
		                               OR CG.CHCKT_DE BETWEEN REPLACE(#FR_TOUR_DE#, '-', '') AND REPLACE(#TO_TOUR_DE#, '-', '')
		                               OR CG.TOUR_DE  BETWEEN REPLACE(#FR_TOUR_DE#, '-', '') AND REPLACE(#TO_TOUR_DE#, '-', '') ) )
		<isNotEmpty property="DELETE_AT">
		   AND P.DELETE_AT = #DELETE_AT#
		</isNotEmpty>
	</sql>	
	
	<select id="PurchsDAO.selectPurchsListForSchdulCount" parameterClass="hashMap" resultClass="java.lang.Integer">
		SELECT COUNT(DISTINCT P.PURCHS_SN) 
		  FROM TB_PURCHS P
		<include refid="PurchsDAO.whereForSelectPurchsListForSchdul"/>
	</select>
	
	<select id="PurchsDAO.selectPurchsListForSchdul" parameterClass="hashMap" resultClass="hashMap">
		<include refid="PurchsDAO.pagingQueryStart"/><![CDATA[
		SELECT ROW_NUMBER() OVER(ORDER BY P.PURCHS_SN) AS ROWSEQ
		     , P.PURCHS_SN
		     , P.ESNTL_ID
		     , (SELECT X.USER_NM FROM TB_USER X WHERE X.ESNTL_ID = P.ESNTL_ID) USER_NM
		     , P.PURCHS_DE
		     , TO_CHAR(P.SETLE_DT, 'YYYY-MM-DD HH24:MI:SS') SETLE_DT
		     , P.TOT_SETLE_AMOUNT
		     , P.PYMNT_SE
		     , (SELECT X.CODE_NM FROM TB_CMMN_DETAIL_CODE X WHERE X.CODE_ID = 'COM006' AND X.CODE = P.PYMNT_SE) PYMNT_SE_NM
		     , P.TOURIST_NM
		     , P.TOURIST_CTTPC
		     , P.KAKAO_ID
		     , P.DELETE_AT
		     , TO_CHAR(P.DELETE_DT, 'YYYY-MM-DD HH24:MI:SS') DELETE_DT
		  FROM TB_PURCHS P ]]>
		<include refid="PurchsDAO.whereForSelectPurchsListForSchdul"/>
		<include refid="PurchsDAO.pagingQueryEnd"/>
	</select>
	
	<select id="PurchsDAO.selectPayList" parameterClass="hashMap" resultClass="hashMap">
		SELECT PURCHS_SN
			, TID
			, RESULTCODE
			, RESULTMSG
			, EVENTCODE
			, TOTPRICE
			, MOID
			, PAYMETHOD
			, APPLNUM
			, APPLDATE
			, APPLTIME
			, CARD_NUM
			, CARD_INTEREST
			, CARD_QUOTA
			, CARD_CODE
			, CARD_BANKCODE
			, VACT_NUM
			, VACT_BANKCODE
			, VACTBANKNAME
			, VACT_NAME
			, VACT_INPUTNAME
			, VACT_DATE
			, VACT_TIME
			, ACCT_BANKCODE
			, CSHR_RESULTCODE
			, CSHR_TYPE
			, PAY_DEVICE
		FROM TB_PAY	
	</select>	
</sqlMap>